var app=angular.module("app",["ngMaterial"]),path={HTML:["src/*.html","src/views/**/*.html","src/views/*.html"],JS:["src/js/**/*.js","src/js/*.js"],LESS_ALL:["src/less/*.less"],LESS:["src/less/style.less"],IMG:["src/img/**"],CSS:["src/css/*.css"],VENDOR:["bower_components/angular/angular.js","bower_components/angular-animate/angular-aria.js"],DIST:["./dist"]};angular.module("app").controller("TodosController",["$scope","$mdToast","TodosFactory",function(o,t,e){o.todos=[],o.ready=!1;var s=function(){e.list().then(function(t){o.todos=t,o.ready=!0})};o.addTodo=function(){var t={};o.new_todo.$valid?(t.id=Date.now()+"",t.title=o.title,t.date=(new Date).toLocaleDateString("en-GB"),t.completed=!1):alert("Título obrigatório"),o.title="",e.add(t).then(s)},o.removeTodo=function(o){e.remove(o).then(s)},s()}]),angular.module("app").factory("TodosFactory",["$q","$http",function(o,t){return{list:function(){var e=o.defer();return t.get("https://todo-list-78110.firebaseio.com/todos.json").then(function(o){var t=[];angular.forEach(o.data,function(o,e){o.id=e,t.push(o)}),e.resolve(t)}),e.promise},add:function(o){var e=o.id;return delete o.id,t.put("https://todo-list-78110.firebaseio.com/todos/"+e+".json",o)},remove:function(o){console.log(o),t.delete("https://todo-list-78110.firebaseio.com/todos/"+o+".json")}}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIiwicGF0aC5qcyIsInRvZG9zLWNvbnRyb2xsZXIuanMiLCJ0b2Rvcy1mYWN0b3J5LmpzIl0sIm5hbWVzIjpbImFwcCIsImFuZ3VsYXIiLCJtb2R1bGUiLCJwYXRoIiwiSFRNTCIsIkpTIiwiTEVTU19BTEwiLCJMRVNTIiwiSU1HIiwiQ1NTIiwiVkVORE9SIiwiRElTVCIsImNvbnRyb2xsZXIiLCIkc2NvcGUiLCIkbWRUb2FzdCIsIlRvZG9zRmFjdG9yeSIsInRvZG9zIiwicmVhZHkiLCJnZXRUb2RvcyIsImxpc3QiLCJ0aGVuIiwiYWRkVG9kbyIsInRvZG8iLCJuZXdfdG9kbyIsIiR2YWxpZCIsImlkIiwiRGF0ZSIsIm5vdyIsInRpdGxlIiwiZGF0ZSIsInRvTG9jYWxlRGF0ZVN0cmluZyIsImNvbXBsZXRlZCIsImFsZXJ0IiwiYWRkIiwicmVtb3ZlVG9kbyIsInJlbW92ZSIsImZhY3RvcnkiLCIkcSIsIiRodHRwIiwicHJvbWVzc2EiLCJkZWZlciIsImdldCIsInJlc3VsdCIsImZvckVhY2giLCJkYXRhIiwicHVzaCIsInJlc29sdmUiLCJwcm9taXNlIiwicHV0IiwiY29uc29sZSIsImxvZyIsImRlbGV0ZSJdLCJtYXBwaW5ncyI6IkFBQUEsR0FBQUEsS0FBQUMsUUFBQUMsT0FBQSxPQUFBLGVDQUFDLE1BRUFDLE1BQ0EsYUFDQSxzQkFDQSxvQkFHQUMsSUFDQSxpQkFDQSxlQUdBQyxVQUNBLG1CQUdBQyxNQUNBLHVCQUdBQyxLQUNBLGNBR0FDLEtBQ0EsaUJBR0FDLFFBQ0Esc0NBQ0Esb0RBR0FDLE1BQ0EsVUNuQ0FWLFNBQUFDLE9BQUEsT0FBQVUsV0FBQSxtQkFBQSxTQUFBLFdBQUEsZUFBQSxTQUFBQyxFQUFBQyxFQUFBQyxHQUNBRixFQUFBRyxTQUNBSCxFQUFBSSxPQUFBLENBRUEsSUFBQUMsR0FBQSxXQUNBSCxFQUFBSSxPQUFBQyxLQUFBLFNBQUFKLEdBQ0FILEVBQUFHLE1BQUFBLEVBQ0FILEVBQUFJLE9BQUEsSUFJQUosR0FBQVEsUUFBQSxXQUNBLEdBQUFDLEtBQ0FULEdBQUFVLFNBQUFDLFFBQ0FGLEVBQUFHLEdBQUFDLEtBQUFDLE1BQUEsR0FDQUwsRUFBQU0sTUFBQWYsRUFBQWUsTUFDQU4sRUFBQU8sTUFBQSxHQUFBSCxPQUFBSSxtQkFBQSxTQUNBUixFQUFBUyxXQUFBLEdBRUFDLE1BQUEsc0JBRUFuQixFQUFBZSxNQUFBLEdBQ0FiLEVBQUFrQixJQUFBWCxHQUFBRixLQUFBRixJQUdBTCxFQUFBcUIsV0FBQSxTQUFBVCxHQUNBVixFQUFBb0IsT0FBQVYsR0FBQUwsS0FBQUYsSUFXQUEsT0NyQ0FqQixRQUFBQyxPQUFBLE9BQUFrQyxRQUFBLGdCQUFBLEtBQUEsUUFBQSxTQUFBQyxFQUFBQyxHQUNBLE9BQ0FuQixLQUFBLFdBQ0EsR0FBQW9CLEdBQUFGLEVBQUFHLE9BWUEsT0FWQUYsR0FBQUcsSUFBQSxxREFDQXJCLEtBQUEsU0FBQXNCLEdBQ0EsR0FBQTFCLEtBQ0FmLFNBQUEwQyxRQUFBRCxFQUFBRSxLQUFBLFNBQUF0QixFQUFBRyxHQUNBSCxFQUFBRyxHQUFBQSxFQUNBVCxFQUFBNkIsS0FBQXZCLEtBRUFpQixFQUFBTyxRQUFBOUIsS0FHQXVCLEVBQUFRLFNBRUFkLElBQUEsU0FBQVgsR0FDQSxHQUFBRyxHQUFBSCxFQUFBRyxFQUdBLGNBRkFILEdBQUFHLEdBRUFhLEVBQUFVLElBQUEsZ0RBQUF2QixFQUFBLFFBQUFILElBRUFhLE9BQUEsU0FBQVYsR0FDQXdCLFFBQUFDLElBQUF6QixHQUNBYSxFQUFBYSxPQUFBLGdEQUFBMUIsRUFBQSIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBwID0gYW5ndWxhci5tb2R1bGUoJ2FwcCcsIFsnbmdNYXRlcmlhbCddKTsiLCJ2YXIgcGF0aCA9IHtcbiAgLy8gdGVtcGxhdGUgbWFya3Vwc1xuICBIVE1MOiBbXG4gICAgJ3NyYy8qLmh0bWwnLFxuICAgICdzcmMvdmlld3MvKiovKi5odG1sJyxcbiAgICAnc3JjL3ZpZXdzLyouaHRtbCdcbiAgXSxcbiAgLy8gbXkganMgc291cmNlIGNvZGVcbiAgSlM6IFtcbiAgICAnc3JjL2pzLyoqLyouanMnLFxuICAgICdzcmMvanMvKi5qcydcbiAgXSxcbiAgLy8gYWxsIGxlc3MgZmlsZXMgKGZvciBjaGFuZ2VzIG1vbml0b3JpbmcgcHVycG9zZSlcbiAgTEVTU19BTEw6IFtcbiAgICAnc3JjL2xlc3MvKi5sZXNzJ1xuICBdLFxuICAvLyBtYWluIGxlc3MgZmlsZSAob3RoZXJzIGFyZSBpbXBvcnRlZCBpbiBzdHlsZS5sZXNzKVxuICBMRVNTOiBbXG4gICAgJ3NyYy9sZXNzL3N0eWxlLmxlc3MnXG4gIF0sXG4gIC8vIGltYWdlc1xuICBJTUc6IFtcbiAgICAnc3JjL2ltZy8qKidcbiAgXSxcbiAgLy8gdmVuZG9yIGNzc1xuICBDU1M6IFtcbiAgICAnc3JjL2Nzcy8qLmNzcydcbiAgXSxcbiAgLy8gdmVuZG9yIGpzXG4gIFZFTkRPUjogW1xuICAgICdib3dlcl9jb21wb25lbnRzL2FuZ3VsYXIvYW5ndWxhci5qcycsXG4gICAgJ2Jvd2VyX2NvbXBvbmVudHMvYW5ndWxhci1hbmltYXRlL2FuZ3VsYXItYXJpYS5qcycsXG4gICAgLy8gLi4uYW5kIG1vcmVcbiAgXSxcbiAgRElTVDogW1xuICAgICcuL2Rpc3QnXG4gIF1cbn07IiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpLmNvbnRyb2xsZXIoJ1RvZG9zQ29udHJvbGxlcicsIGZ1bmN0aW9uKCRzY29wZSwgJG1kVG9hc3QsIFRvZG9zRmFjdG9yeSkge1xyXG4gICAgJHNjb3BlLnRvZG9zID0gW107XHJcbiAgICAkc2NvcGUucmVhZHkgPSBmYWxzZTtcclxuXHJcbiAgICB2YXIgZ2V0VG9kb3MgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICBUb2Rvc0ZhY3RvcnkubGlzdCgpLnRoZW4oZnVuY3Rpb24odG9kb3MpIHtcclxuICAgICAgICAgICAgJHNjb3BlLnRvZG9zID0gdG9kb3M7XHJcbiAgICAgICAgICAgICRzY29wZS5yZWFkeSA9IHRydWU7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgICRzY29wZS5hZGRUb2RvID0gZnVuY3Rpb24gYWRkVG9kbygpIHtcclxuICAgICAgICB2YXIgdG9kbyA9IHt9O1xyXG4gICAgICAgIGlmICgkc2NvcGUubmV3X3RvZG8uJHZhbGlkKSB7XHJcbiAgICAgICAgICAgIHRvZG8uaWQgPSBEYXRlLm5vdygpICsgJyc7XHJcbiAgICAgICAgICAgIHRvZG8udGl0bGUgPSAkc2NvcGUudGl0bGU7XHJcbiAgICAgICAgICAgIHRvZG8uZGF0ZSA9IG5ldyBEYXRlKCkudG9Mb2NhbGVEYXRlU3RyaW5nKCdlbi1HQicpO1xyXG4gICAgICAgICAgICB0b2RvLmNvbXBsZXRlZCA9IGZhbHNlO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGFsZXJ0KCdUw610dWxvIG9icmlnYXTDs3JpbycpO1xyXG4gICAgICAgIH07XHJcbiAgICAgICAgJHNjb3BlLnRpdGxlID0gJyc7XHJcbiAgICAgICAgVG9kb3NGYWN0b3J5LmFkZCh0b2RvKS50aGVuKGdldFRvZG9zKTtcclxuICAgIH07XHJcblxyXG4gICAgJHNjb3BlLnJlbW92ZVRvZG8gPSBmdW5jdGlvbihpZCkge1xyXG4gICAgICAgIFRvZG9zRmFjdG9yeS5yZW1vdmUoaWQpLnRoZW4oZ2V0VG9kb3MpO1xyXG4gICAgfTtcclxuXHJcbiAgICAvLyAkc2NvcGUuaXNPcGVuID0gZmFsc2U7XHJcblxyXG4gICAgLy8gJHNjb3BlLmRlbW8gPSB7XHJcbiAgICAvLyAgICAgaXNPcGVuOiBmYWxzZSxcclxuICAgIC8vICAgICBjb3VudDogMCxcclxuICAgIC8vICAgICBzZWxlY3RlZERpcmVjdGlvbjogJ3JpZ2h0J1xyXG4gICAgLy8gfTtcclxuXHJcbiAgICBnZXRUb2RvcygpO1xyXG59KTsiLCJhbmd1bGFyLm1vZHVsZSgnYXBwJykuZmFjdG9yeSgnVG9kb3NGYWN0b3J5JywgZnVuY3Rpb24gKCRxLCAkaHR0cCkge1xuXHRyZXR1cm4ge1xuXHRcdGxpc3Q6IGZ1bmN0aW9uICgpIHtcblx0XHRcdHZhciBwcm9tZXNzYSA9ICRxLmRlZmVyKCk7XG5cblx0XHRcdCRodHRwLmdldCgnaHR0cHM6Ly90b2RvLWxpc3QtNzgxMTAuZmlyZWJhc2Vpby5jb20vdG9kb3MuanNvbicpXG5cdFx0XHRcdC50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHtcblx0XHRcdFx0XHR2YXIgdG9kb3MgPSBbXTtcblx0XHRcdFx0XHRhbmd1bGFyLmZvckVhY2gocmVzdWx0LmRhdGEsIGZ1bmN0aW9uICh0b2RvLCBpZCkge1xuXHRcdFx0XHRcdFx0dG9kby5pZCA9IGlkO1xuXHRcdFx0XHRcdFx0dG9kb3MucHVzaCh0b2RvKTtcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRwcm9tZXNzYS5yZXNvbHZlKHRvZG9zKTtcblx0XHRcdFx0fSk7XG5cblx0XHRcdHJldHVybiBwcm9tZXNzYS5wcm9taXNlO1xuXHRcdH0sXG5cdFx0YWRkOiBmdW5jdGlvbiAodG9kbykge1xuXHRcdFx0dmFyIGlkID0gdG9kby5pZDtcblx0XHRcdGRlbGV0ZSB0b2RvLmlkO1xuXG5cdFx0XHRyZXR1cm4gJGh0dHAucHV0KCdodHRwczovL3RvZG8tbGlzdC03ODExMC5maXJlYmFzZWlvLmNvbS90b2Rvcy8nICsgaWQgKyAnLmpzb24nLCB0b2RvKTtcblx0XHR9LFxuXHRcdHJlbW92ZTogZnVuY3Rpb24gKGlkKSB7XG5cdFx0XHRjb25zb2xlLmxvZyhpZCk7XG5cdFx0XHQkaHR0cC5kZWxldGUoJ2h0dHBzOi8vdG9kby1saXN0LTc4MTEwLmZpcmViYXNlaW8uY29tL3RvZG9zLycgKyBpZCArICcuanNvbicpO1xuXHRcdH1cblx0fTtcbn0pOyJdfQ==
